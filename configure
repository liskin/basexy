#!/bin/sh
# vim: sts=2 sw=2 et fdm=marker cms=\ #\ %s

unalias -a

findtool() # {{{
{
  local val= varval= var="$1"; shift
  eval "varval=\"\$$var\""
  if test -n "$varval"; then
    val=$(command -v $varval 2>/dev/null || :)
  else
    while test -z "$val" && test "${1+set}" = set; do
      test -z "$1" ||
        val=$(command -v "$1" 2>/dev/null || :)
      shift
    done
  fi
  test -n "$val" || {
    echo >&2 "not found: $var"
    exit 1
  }
  test -x "$val" || {
    echo >&2 "not executable: $var ($val)"
    exit 1
  }
  eval "$var=\"\$val\""
} # }}}

findfile() # {{{
{
  local pth=$1
  test -e "$pth" || {
    echo >&2 "not found: $pth"
    exit 1
  }
} # }}}

populate() # {{{
{
  sed \
    -e "s@rootdir@$rootdirg" \
    -e "s@prefix@$prefixg" \
    -e "s@bindir@$bindirg" \
    -e "s@datarootdir@$datarootdirg" \
    -e "s@mandir@$mandirg" \
    -e "s@CXX@$CXXg" \
    -e "s@LDFLAGS@$LDFLAGSg" \
    -e "s@boost_includes@$boost_includesg" \
    $1 \
  > $2
} # }}}

rootdir=$(cd "${0%/*}" && pwd) || {
  printf "%s: %s\n" "$0" "cannot determine rootdir"
  exit 1
}

prefix=/usr/local
bindir='$(prefix)/bin'
datarootdir='$(prefix)/share'
mandir='$(datarootdir)/man'
mandir_set=0

for a in "$@"; do
  case $a in
  --bindir=*)       bindir="${a#*=}"      ;;
  --datarootdir=*)  datarootdir="${a#*=}" ;;
  --mandir=*)
    mandir="${a#*=}"
    mandir_set=1
  ;;
  --prefix=*)       prefix="${a#*=}"      ;;
  --with-boost=*)   with_boost="${a#*=}"  ;;
  CXX=*)            CXX="${a#*=}"         ;;
  LDFLAGS=*)        LDFLAGS="${a#*=}"     ;;
  esac
done

if test "$prefix" = /usr/local && test $mandir_set = 0; then
  mandir=$prefix/man
fi

boost_includes=${with_boost:-$prefix}/include
findfile $boost_includes/boost/format.hpp
findtool CXX c++

populate $rootdir/GNUmakefile.in GNUmakefile
